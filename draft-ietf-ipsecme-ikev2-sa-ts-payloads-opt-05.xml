<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.29 (Ruby 3.2.3) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-ipsecme-ikev2-sa-ts-payloads-opt-05" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.29.0 -->
  <front>
    <title abbrev="Optimized Rekey of IKE &amp; Child SAs">Optimized Rekeys in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-ipsecme-ikev2-sa-ts-payloads-opt-05"/>
    <author initials="S." surname="Kampati" fullname="Sandeep Kampati">
      <organization abbrev="Microsoft">Microsoft</organization>
      <address>
        <postal>
          <country>India</country>
        </postal>
        <email>skampati@microsoft.com</email>
      </address>
    </author>
    <author initials="W." surname="Pan" fullname="Wei Pan">
      <organization abbrev="Huawei">Huawei Technologies</organization>
      <address>
        <postal>
          <street>101 Software Avenue, Yuhuatai District</street>
          <city>Nanjing</city>
          <region>Jiangsu</region>
          <code/>
          <country>China</country>
        </postal>
        <email>william.panwei@huawei.com</email>
      </address>
    </author>
    <author initials="P." surname="Wouters" fullname="Paul Wouters">
      <organization abbrev="Aiven">Aiven</organization>
      <address>
        <email>paul.wouters@aiven.io</email>
      </address>
    </author>
    <author initials="M." surname="Bharath" fullname="Meduri S S Bharath">
      <organization abbrev="Mavenir">Mavenir Systems Pvt Ltd</organization>
      <address>
        <postal>
          <street>Manyata Tech Park</street>
          <city>Bangalore</city>
          <region>Karnataka</region>
          <code/>
          <country>India</country>
        </postal>
        <email>bharath.meduri@mavenir.com</email>
      </address>
    </author>
    <author initials="M." surname="Chen" fullname="Meiling Chen">
      <organization abbrev="CMCC">China Mobile</organization>
      <address>
        <postal>
          <street>32 Xuanwumen West Street, West District</street>
          <city>Beijing</city>
          <code>100053</code>
          <country>China</country>
        </postal>
        <email>chenmeiling@chinamobile.com</email>
      </address>
    </author>
    <author initials="V." surname="Smyslov" fullname="Valery Smyslov">
      <organization abbrev="ELVIS-PLUS">ELVIS-PLUS</organization>
      <address>
        <postal>
          <street>PO Box 81</street>
          <city>Moscow (Zelenograd)</city>
          <code>124460</code>
          <country>Russian Federation</country>
        </postal>
        <phone>+7 495 276 0211</phone>
        <email>svan@elvis.ru</email>
      </address>
    </author>
    <date year="2025" month="July" day="07"/>
    <area>Security</area>
    <workgroup>IPSECME Working Group</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <?line 88?>

<t>This document describes a method for reducing the size of the Internet Key Exchange version 2 (IKEv2) CREATE_CHILD_SA exchanges used for rekeying of the IKE or Child SA by replacing the SA and TS payloads with a Notify Message payload.
Reducing size and complexity of IKEv2 exchanges is especially useful for low power consumption battery powered devices.</t>
    </abstract>
    <note removeInRFC="true">
      <name>About This Document</name>
      <t>
        Status information for this document may be found at <eref target="https://datatracker.ietf.org/doc/draft-ietf-ipsecme-ikev2-sa-ts-payloads-opt/"/>.
      </t>
      <t>
        Discussion of this document takes place on the
        ipsec Working Group mailing list (<eref target="mailto:ipsec@ietf.org"/>),
        which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/ipsec/"/>.
        Subscribe at <eref target="https://www.ietf.org/mailman/listinfo/ipsec/"/>.
      </t>
    </note>
  </front>
  <middle>
    <?line 93?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>The Internet Key Exchange protocol version 2 (IKEv2) <xref target="RFC7296"/> is used to negotiate Security Association (SA) parameters for the IKE SA and the Child SAs. Cryptographic key material for these SAs have a limited lifetime before it needs to be refreshed, a process referred to as "rekeying". IKEv2 uses the CREATE_CHILD_SA exchange to rekey either the IKE SA or the Child SAs.</t>
      <t>When rekeying, a full set of negotiation parameters are exchanged. However, most of these parameters will be the same as before. This means that the security properties of the IKE or Child SA in practice do not change during a typical rekey.</t>
      <t>For example, the Traffic Selectors (TS) negotiated for the new Child SA must cover the Traffic Selectors negotiated for the old Child SA. And in practically all cases, a new Child SA does not need to cover a wider set of traffic. In the rare case where this would be needed, either a standard rekey could be used or a new Child SA could be negotiated followed by a deletion of the replaced Child SA. Further, per RFC 7296, the Traffic Selectors and algorithms should not change when rekeying the Child SA.</t>
      <t>This document specifies a method to omit these parameters and replace them with a single Notify Message declaring that all these parameters are identical to the originally negotiated parameters.</t>
      <t>Large scale IKEv2 gateways such as Evolved Packet Data Gateway (ePDG) in 4G networks or Centralized Radio Access Network (cRAN/Cloud) gateways in 5G networks typically support more than 100,000 IKE/IPsec connections. At any point in time, there will be hundreds or thousands of IKE SAs and Child SAs that are being rekeyed. This takes a large amount of bandwidth and CPU power and any protocol simplification or bandwidth reducing would result in a significant resource saving.</t>
      <t>For Internet of Things (IoT) devices which utilize low power consumption technology, reducing the size of the CREATE_CHILD_SA exchange for rekeying reduces its power consumption, as sending bytes over the air is usually the most power consuming operation of such a device. Reducing the CPU operations required to verify the rekey exchanges parameters will also save power and extend the lifetime for these devices.</t>
      <t>When using identical parameters for the IKE SA or Child SA rekey, the SA and TS payloads can be omitted thanks to the optimization defined in this document. For an IKE SA rekey, instead of the (large) SA payload, only a Key Exchange (KE) payload, a Nonce payload, and a new Notify Type payload with the new Security Parameter Index (SPI) are required. For a Child SA rekey, instead of the SA or TS payloads, only an optional KE payload (when using PFS), a Nonce payload, and a new Notify Type payload with the new SPI are needed. This makes the rekey exchange packets much smaller and the peers do not need to verify that the SA or TS parameters are compatible with the old SA parameters.</t>
    </section>
    <section anchor="conventions-used-in-this-document">
      <name>Conventions Used in This Document</name>
      <section anchor="requirements-language">
        <name>Requirements Language</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
        <?line -18?>

</section>
    </section>
    <section anchor="negotiation-of-support-for-optimized-rekey">
      <name>Negotiation of Support for Optimized Rekey</name>
      <t>To indicate support for the optimized rekey negotiation, the initiator includes the OPTIMIZED_REKEY_SUPPORTED notify payload in the IKE_AUTH exchange request.
If the responder supports this optimized rekey and is configured to use it, then it includes the OPTIMIZED_REKEY_SUPPORTED in the IKE_AUTH response message.
If multiple IKE_AUTH exchanges are sent, the OPTIMIZED_REKEY_SUPPORTED notify payload should be in the first IKE_AUTH request and the last IKE_AUTH response.
During the IKE_AUTH exchanges, the entire SA and TS payloads are included as normal. Note that the notify indicates support for optimized rekey for both IKE and Child SAs.</t>
      <t>A responder that does not support the optimized rekey exchange processes the SA and TS payloads as normal, and does not include the new Notify. As per regular IKEv2 processing, a responder that does not recognize this new Notify, will ignore it. Responders may have been administratively configured with the optimization turned off for local reasons. The absence of the Notify indicates to the initiator that the optimization is not available, and regular rekey should be used.</t>
      <t>The IKE_AUTH message exchange in this case is shown below:</t>
      <artwork><![CDATA[
Initiator                       Responder
--------------------------------------------------------------------
HDR, SK {IDi, [CERT,] [CERTREQ,]
    [IDr,] AUTH, SAi2, TSi, TSr,
    N(OPTIMIZED_REKEY_SUPPORTED)} -->
                            <-- HDR, SK {IDr, [CERT,] AUTH,
                                    SAr2, TSi, TSr,
                                    N(OPTIMIZED_REKEY_SUPPORTED)}
]]></artwork>
      <t>If both peers have exchanged OPTIMIZED_REKEY_SUPPORTED notifies, peers <bcp14>SHOULD</bcp14> use the optimized rekey method for rekeys.
Non-optimized, regular rekey requests <bcp14>MUST</bcp14> always be accepted.
The regular rekey can be retried when the optimized rekey fails.</t>
      <t>Note that, except for the key and identification information such as the SPI, the optimized rekey <bcp14>MUST</bcp14> inherit all other properties of the SA being rekeyed.
This means the configurations related to the SA being rekeyed are supposed to have no changes.
If there is a change to the configurations, the regular rekey <bcp14>MUST</bcp14> be used instead.
After the regular rekey, the next rekey can use the optimized way if there is no change to the configuration.</t>
    </section>
    <section anchor="optimized-rekey-of-ike-sa">
      <name>Optimized Rekey of IKE SA</name>
      <t>The initiator of an optimized rekey request sends a CREATE_CHILD_SA request with the OPTIMIZED_REKEY notify payload containing the new SPI for the new IKE SA. It omits the SA payload.</t>
      <t>The responder of an optimized rekey request replies with an included OPTIMIZED_REKEY notify with its new IKE SPI and also omits the SA payload.</t>
      <t>Both parties send their nonce and KE payloads just as they would do for a regular IKE SA rekey.</t>
      <t>Using the old SPI from the IKE header and the two new SPIs respectively from the initiator and responder's OPTIMIZED_REKEY payloads, both parties can perform the IKE SA rekey operation.</t>
      <t>The CREATE_CHILD_SA message exchange in this case is shown below:</t>
      <artwork><![CDATA[
Initiator                       Responder
--------------------------------------------------------------------
HDR, SK {N(OPTIMIZED_REKEY,newSPIi),
         Ni, KEi} -->
                            <-- HDR, SK {N(OPTIMIZED_REKEY,newSPIr),
                                         Nr, KEr}
]]></artwork>
    </section>
    <section anchor="optimized-rekey-of-child-sas">
      <name>Optimized Rekey of Child SAs</name>
      <t>The initiator of an optimized rekey request sends a CREATE_CHILD_SA request with the OPTIMIZED_REKEY notify payload containing the new SPI for the new Child SA.
It omits the SA and TS payloads.
If the Child SA being rekeyed was negotiated with Perfect Forward Secrecy (PFS), a KEi payload is included as well.
If no PFS was negotiated for the Child SA being rekeyed, a KEi payload is not included.
If the Child SA being rekeyed was created with IP compression, then IPCOMP_SUPPORTED notifications <bcp14>MUST</bcp14> be sent as they contain the required updated Compression Parameter Indexes (CPIs).</t>
      <t>The responder of an optimized rekey request performs the same process. It includes the OPTIMIZED_REKEY notify with its new SPI for the new Child SA and omits the SA and TS payloads. Depending on the PFS and IP compression negotiation of the Child SA being rekeyed, the responder correspondingly includes a KEr payload and/or the IPCOMP_SUPPORTED Notify payload.</t>
      <t>Both parties send their nonce payloads just as they would do for a regular Child SA rekey.</t>
      <t>Using the old SPI from the REKEY_SA payload and the two new SPIs respectively from the initiator and responder's OPTIMIZED_REKEY payloads, both parties can perform the Child SA rekey operation.</t>
      <t>Except for the key and identification information such as the SPI and CPI, all other properties of the Child SA being rekeyed <bcp14>MUST</bcp14> be inherited to the one newly created by the optimized rekey. Notify payloads that can affect these properties, such as USE_TRANSPORT_MODE, ESP_TFC_PADDING_NOT_SUPPORTED, ROHC_SUPPORTED <xref target="RFC5857"/> or USE_AGGFRAG <xref target="RFC9347"/> <bcp14>MUST NOT</bcp14> be sent.
In contrast, the Post-quantum Preshared Keys (PPKs) defined in <xref target="I-D.ietf-ipsecme-ikev2-qr-alt"/> can be considered as part of the key information since they are used in the session keys calculations, therefore, the PPKs negotiation <bcp14>MUST</bcp14> be included in the optimized Child SA rekey if <xref target="I-D.ietf-ipsecme-ikev2-qr-alt"/> are used.</t>
      <t>The CREATE_CHILD_SA message exchange in this case is shown below:</t>
      <artwork><![CDATA[
Initiator                       Responder
--------------------------------------------------------------------
HDR, SK {N(REKEY_SA,oldSPI), N(OPTIMIZED_REKEY,newSPIi),
         Ni, [KEi,]} -->
                            <-- HDR, SK {N(OPTIMIZED_REKEY,newSPIr),
                                         Nr, [KEr,]}
]]></artwork>
      <t>If a responder fails to process the optimized rekey request because for some reasons it cannot re-use SA parameters for the SA being rekeyed (e.g., there is a change in the responder's configuration), it <bcp14>MUST</bcp14> return an error as the notification of type NO_PROPOSAL_CHOSEN. After receiving the error response of the optimized rekey, the initiator can retry a regular rekey.</t>
      <section anchor="optimized-rekey-of-the-initial-child-sa">
        <name>Optimized Rekey of the Initial Child SA</name>
        <t>For the initial Child SA that was negotiated as part of an initial IKE exchange (e.g., IKE_AUTH), at the time of its creation the parameters of PFS and KE method(s) for Child SAs are not negotiated.
However, <xref target="I-D.pwouters-ipsecme-child-pfs-info"/> provides a mechanism to negotiate these parameters during the creation of the initial Child SA.</t>
        <t>If both peers support and use <xref target="I-D.pwouters-ipsecme-child-pfs-info"/>, the PFS policy and KE method(s) for the initial Child SA is known during its creation.
Therefore, in this situation, when rekeying the initial Child SA for the first time, the optimized way <bcp14>SHOULD</bcp14> be used.
If <xref target="I-D.pwouters-ipsecme-child-pfs-info"/> is not supported or used, a regular rekey <bcp14>MUST</bcp14> be used for the first time to negotiate these parameters. Then, the next rekey can use the optimized way.</t>
      </section>
    </section>
    <section anchor="payload-formats">
      <name>Payload Formats</name>
      <section anchor="optimizedrekeysupported-notify">
        <name>OPTIMIZED_REKEY_SUPPORTED Notify</name>
        <t>The OPTIMIZED_REKEY_SUPPORTED Notify Message type notification is used by the initiator and responder to indicate their support for the optimized rekey negotiation.</t>
        <artwork><![CDATA[
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+-+-------------+-------------------------------+
| Next Payload  |C|  RESERVED   |         Payload Length        |
+---------------+-+-------------+-------------------------------+
|Protocol ID(=0)| SPI Size (=0) |      Notify Message Type      |
+---------------+---------------+-------------------------------+
]]></artwork>
        <ul spacing="normal">
          <li>
            <t>Protocol ID (1 octet) - <bcp14>MUST</bcp14> be 0.</t>
          </li>
          <li>
            <t>SPI Size (1 octet) - <bcp14>MUST</bcp14> be 0, meaning no SPI is present.</t>
          </li>
          <li>
            <t>Notify Message Type (2 octets) - <bcp14>MUST</bcp14> be set to the value <tt>TBD1</tt>.</t>
          </li>
        </ul>
        <t>This Notify Message type contains no data.</t>
      </section>
      <section anchor="optimizedrekey-notify">
        <name>OPTIMIZED_REKEY Notify</name>
        <t>The OPTIMIZED_REKEY Notify Message type is used to perform an optimized IKE SA or Child SA rekey.</t>
        <artwork><![CDATA[
 0                 1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+---------------+-+-------------+-------------------------------+
| Next Payload  |C|  RESERVED   |         Payload Length        |
+---------------+-+-------------+-------------------------------+
|Protocol ID(=0)| SPI Size (=0) |      Notify Message Type      |
+---------------+---------------+-------------------------------+
|                                                               |
~                            New SPI                            ~
|                                                               |
+---------------------------------------------------------------+
]]></artwork>
        <ul spacing="normal">
          <li>
            <t>Protocol ID (1 octet) - <bcp14>MUST</bcp14> be 0.</t>
          </li>
          <li>
            <t>SPI Size (1 octet) - <bcp14>MUST</bcp14> be 0. The "Security Parameter Index (SPI)" field is not used in this Notify, and the new SPI is placed in the "Notification Data" field.</t>
          </li>
          <li>
            <t>Notify Message Type (2 octets) - <bcp14>MUST</bcp14> be set to the value <tt>TBD2</tt>.</t>
          </li>
        </ul>
        <t>The Notification Data for this notify contains new SPI. Its size depends on the type of SA being rekeyed. In case of IKE SA it <bcp14>MUST</bcp14> be 8 octets. In case of Child SA it <bcp14>MUST</bcp14> be equal to the SPI Size field in the REKEY_SA notification that identifies the SA being rekeyed.</t>
      </section>
    </section>
    <section anchor="interaction-with-ikev2-extensions">
      <name>Interaction with IKEv2 Extensions</name>
      <section anchor="multiple-key-exchanges">
        <name>Multiple Key Exchanges</name>
        <t><xref target="RFC9370"/> defines the use of multiple key exchange methods for the purpose of IKE SA and Child SA establishment in IKEv2. If multiple key exchange methods are used for an SA, then optimized rekey of this SA <bcp14>MUST</bcp14> use the same key exchange methods. It means that the CREATE_CHILD_SA will be followed by some IKE_FOLLOWUP_KE exchanges and the number of these exchanges will be determined by the number of additional key exchange methods used for the SA being rekeyed.</t>
      </section>
      <section anchor="ike-session-resumption">
        <name>IKE Session Resumption</name>
        <t>IKE Session Resumption <xref target="RFC5723"/> defines an IKEv2 extension, that allows peers to quickly restore IKE SA when it is for some reason deleted. When used with optimized rekey, the following rules apply.</t>
        <ul spacing="normal">
          <li>
            <t>Support for optimized rekeys <bcp14>MUST</bcp14> be re-negotiated during the resumption (in the IKE_AUTH exchange).</t>
          </li>
          <li>
            <t>If support for optimized rekey is negotiated during resumption, then all IKE SA algorithms, including key exchange methods, are taken from the resumption ticket (i.e., from the SA being resumed), since they are not negotiated in the IKE_SA_RESUME exchange.</t>
          </li>
          <li>
            <t>The initial Child SA created during the resumption is considered as been created with key exchange methods for the IKE SA, that were stored in the resumption ticket. This is despite the fact, that during the resumption no key exchanges (e.g., Diffie-Hellman) take place, the session keys are derived from the keys stored in the resumption ticket.</t>
          </li>
        </ul>
      </section>
      <section anchor="mixing-preshared-keys-in-the-createchildsa-exchanges">
        <name>Mixing Preshared Keys in the CREATE_CHILD_SA Exchanges</name>
        <t><xref target="I-D.ietf-ipsecme-ikev2-qr-alt"/> defines how PPKs can be mixed into the session keys calculations. In particular, this document allows PPKs to be used in the CREATE_CHILD_SA exchanges when SAs are being rekeyed.
If peers support <xref target="I-D.ietf-ipsecme-ikev2-qr-alt"/> and a PPK was used for the SA being rekeyed, then they <bcp14>MUST NOT</bcp14> silently re-use this PPK in case of optimized rekey and <bcp14>MUST</bcp14> re-negotiate the use of PPKs in the CREATE_CHILD_SA exchange.</t>
      </section>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>This document defines two new Notify Message Types in the "IKEv2 Notify Message Types - Status Types" registry. IANA is requested to assign codepoints in this registry.</t>
      <artwork><![CDATA[
NOTIFY messages: status types            Value
----------------------------------------------------------
OPTIMIZED_REKEY_SUPPORTED                TBD1
OPTIMIZED_REKEY                          TBD2
]]></artwork>
    </section>
    <section anchor="operational-considerations">
      <name>Operational Considerations</name>
      <t>Some implementations allow sending rekey messages with a different set of Traffic Selectors or cryptographic parameters in response to a configuration update. IKEv2 <xref target="RFC7296"/> states this "<bcp14>SHOULD NOT</bcp14>" be done. But if there is a configuration change that changes the Traffic Selectors, cryptographic parameters, or other properties of the SA, the regular rekey should be used to make the configuration change active, since the optimized rekey can't express such changes.</t>
      <t>Two peers <bcp14>MUST</bcp14> have the same PFS policy and contain mutally acceptable KE method(s), otherwise, the rekey (regardless of regular or optimized way) of the initial Child SA created in the IKE_AUTH exchange would fail. This issue is also discussed in detail in <xref target="I-D.pwouters-ipsecme-child-pfs-info"/>.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The optimized rekey removes sending unnecessary new parameters that originally would have to be validated against the original parameters. In that sense, this optimization enhances the security of the rekey process by reducing the complexity and code required.</t>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>Special thanks go to Antony Antony and Tobias Brunner.</t>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
        <reference anchor="RFC7296">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="C. Kaufman" initials="C." surname="Kaufman"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <author fullname="Y. Nir" initials="Y." surname="Nir"/>
            <author fullname="P. Eronen" initials="P." surname="Eronen"/>
            <author fullname="T. Kivinen" initials="T." surname="Kivinen"/>
            <date month="October" year="2014"/>
            <abstract>
              <t>This document describes version 2 of the Internet Key Exchange (IKE) protocol. IKE is a component of IPsec used for performing mutual authentication and establishing and maintaining Security Associations (SAs). This document obsoletes RFC 5996, and includes all of the errata for it. It advances IKEv2 to be an Internet Standard.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="79"/>
          <seriesInfo name="RFC" value="7296"/>
          <seriesInfo name="DOI" value="10.17487/RFC7296"/>
        </reference>
        <reference anchor="RFC5723">
          <front>
            <title>Internet Key Exchange Protocol Version 2 (IKEv2) Session Resumption</title>
            <author fullname="Y. Sheffer" initials="Y." surname="Sheffer"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <date month="January" year="2010"/>
            <abstract>
              <t>The Internet Key Exchange version 2 (IKEv2) protocol has a certain computational and communication overhead with respect to the number of round trips required and the cryptographic operations involved. In remote access situations, the Extensible Authentication Protocol (EAP) is used for authentication, which adds several more round trips and consequently latency.</t>
              <t>To re-establish security associations (SAs) upon a failure recovery condition is time consuming especially when an IPsec peer (such as a VPN gateway) needs to re-establish a large number of SAs with various endpoints. A high number of concurrent sessions might cause additional problems for an IPsec peer during SA re-establishment.</t>
              <t>In order to avoid the need to re-run the key exchange protocol from scratch, it would be useful to provide an efficient way to resume an IKE/IPsec session. This document proposes an extension to IKEv2 that allows a client to re-establish an IKE SA with a gateway in a highly efficient manner, utilizing a previously established IKE SA.</t>
              <t>A client can reconnect to a gateway from which it was disconnected. The proposed approach encodes partial IKE state into an opaque ticket, which can be stored on the client or in a centralized store, and is later made available to the IKEv2 responder for re-authentication. We use the term ticket to refer to the opaque data that is created by the IKEv2 responder. This document does not specify the format of the ticket but examples are provided. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5723"/>
          <seriesInfo name="DOI" value="10.17487/RFC5723"/>
        </reference>
        <reference anchor="RFC9370">
          <front>
            <title>Multiple Key Exchanges in the Internet Key Exchange Protocol Version 2 (IKEv2)</title>
            <author fullname="CJ. Tjhai" initials="CJ." surname="Tjhai"/>
            <author fullname="M. Tomlinson" initials="M." surname="Tomlinson"/>
            <author fullname="G. Bartlett" initials="G." surname="Bartlett"/>
            <author fullname="S. Fluhrer" initials="S." surname="Fluhrer"/>
            <author fullname="D. Van Geest" initials="D." surname="Van Geest"/>
            <author fullname="O. Garcia-Morchon" initials="O." surname="Garcia-Morchon"/>
            <author fullname="V. Smyslov" initials="V." surname="Smyslov"/>
            <date month="May" year="2023"/>
            <abstract>
              <t>This document describes how to extend the Internet Key Exchange Protocol Version 2 (IKEv2) to allow multiple key exchanges to take place while computing a shared secret during a Security Association (SA) setup.</t>
              <t>This document utilizes the IKE_INTERMEDIATE exchange, where multiple key exchanges are performed when an IKE SA is being established. It also introduces a new IKEv2 exchange, IKE_FOLLOWUP_KE, which is used for the same purpose when the IKE SA is being rekeyed or is creating additional Child SAs.</t>
              <t>This document updates RFC 7296 by renaming a Transform Type 4 from "Diffie-Hellman Group (D-H)" to "Key Exchange Method (KE)" and renaming a field in the Key Exchange Payload from "Diffie-Hellman Group Num" to "Key Exchange Method". It also renames an IANA registry for this Transform Type from "Transform Type 4 - Diffie- Hellman Group Transform IDs" to "Transform Type 4 - Key Exchange Method Transform IDs". These changes generalize key exchange algorithms that can be used in IKEv2.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9370"/>
          <seriesInfo name="DOI" value="10.17487/RFC9370"/>
        </reference>
        <reference anchor="I-D.ietf-ipsecme-ikev2-qr-alt">
          <front>
            <title>Mixing Preshared Keys in the IKE_INTERMEDIATE and in the CREATE_CHILD_SA Exchanges of IKEv2 for Post-quantum Security</title>
            <author fullname="Valery Smyslov" initials="V." surname="Smyslov">
              <organization>ELVIS-PLUS</organization>
            </author>
            <date day="23" month="May" year="2025"/>
            <abstract>
              <t>   An Internet Key Exchange protocol version 2 (IKEv2) extension defined
   in RFC8784 allows IPsec traffic to be protected against someone
   storing VPN communications today and decrypting them later, when (and
   if) a Cryptographically Relevant Quantum Computer (CRQC) is
   available.  The protection is achieved by means of a Post-quantum
   Preshared Key (PPK) which is mixed into the session keys calculation.
   However, this protection does not cover an initial IKEv2 Security
   Association (SA), which might be unacceptable in some scenarios.
   This specification defines an alternative way to provide protection
   against quantum computers, which is similar to the solution defined
   in RFC8784, but also protects the initial IKEv2 SA.

   RFC8784 assumes that PPKs are static and thus they are only used when
   an initial IKEv2 SA is created.  If a fresh PPK is available before
   the IKE SA expired, then the only way to use it is to delete the
   current IKE SA and create a new one from scratch, which is
   inefficient.  This specification defines a way to use PPKs in active
   IKEv2 SAs for creating additional IPsec SAs and rekey operations.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-ipsecme-ikev2-qr-alt-10"/>
        </reference>
        <reference anchor="I-D.pwouters-ipsecme-child-pfs-info">
          <front>
            <title>IKEv2 support for Child SA PFS policy notification</title>
            <author fullname="Paul Wouters" initials="P." surname="Wouters">
              <organization>Aiven</organization>
            </author>
            <date day="3" month="March" year="2025"/>
            <abstract>
              <t>   This document defines the CHILD_PFS_INFO Notify Message Status Type
   Payload for the Internet Key Exchange Protocol Version 2 (IKEv2) to
   support exchanging the policy settings for the Perfect Forward
   Secrecy (PFS) and which Key Exchange (KE) method(s) setting of the
   initial Child SA that are expected to be used during Child SA rekey.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-pwouters-ipsecme-child-pfs-info-01"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC5857">
          <front>
            <title>IKEv2 Extensions to Support Robust Header Compression over IPsec</title>
            <author fullname="E. Ertekin" initials="E." surname="Ertekin"/>
            <author fullname="C. Christou" initials="C." surname="Christou"/>
            <author fullname="R. Jasani" initials="R." surname="Jasani"/>
            <author fullname="T. Kivinen" initials="T." surname="Kivinen"/>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <date month="May" year="2010"/>
            <abstract>
              <t>In order to integrate Robust Header Compression (ROHC) with IPsec, a mechanism is needed to signal ROHC channel parameters between endpoints. Internet Key Exchange (IKE) is a mechanism that can be leveraged to exchange these parameters. This document specifies extensions to IKEv2 that will allow ROHC and its associated channel parameters to be signaled for IPsec Security Associations (SAs). [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5857"/>
          <seriesInfo name="DOI" value="10.17487/RFC5857"/>
        </reference>
        <reference anchor="RFC9347">
          <front>
            <title>Aggregation and Fragmentation Mode for Encapsulating Security Payload (ESP) and Its Use for IP Traffic Flow Security (IP-TFS)</title>
            <author fullname="C. Hopps" initials="C." surname="Hopps"/>
            <date month="January" year="2023"/>
            <abstract>
              <t>This document describes a mechanism for aggregation and fragmentation of IP packets when they are being encapsulated in Encapsulating Security Payload (ESP). This new payload type can be used for various purposes, such as decreasing encapsulation overhead for small IP packets; however, the focus in this document is to enhance IP Traffic Flow Security (IP-TFS) by adding Traffic Flow Confidentiality (TFC) to encrypted IP-encapsulated traffic. TFC is provided by obscuring the size and frequency of IP traffic using a fixed-size, constant-send-rate IPsec tunnel. The solution allows for congestion control, as well as nonconstant send-rate usage.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9347"/>
          <seriesInfo name="DOI" value="10.17487/RFC9347"/>
        </reference>
      </references>
    </references>
    <?line 323?>



  </back>
  <!-- ##markdown-source:
H4sIAAAAAAAAA+0823LbRpbvrNI/9CpVO1ICMpJsx7YqmzEtUjZXN64oOZtx
XEoTaEo9AgEEDZDmxMm37Lfsl+05py9ogKBsl6dqdqeWqYpIoC/nfuvT7na7
W51CFrE4ZBdZIefybyJil+JerBSTCSvuBBslhcgTUbATsWLD9+EdT24FG+dp
kYZpzN6IXMk0YQdsZ3QyXBzsbnX4dJqLxdqKLJ0xGML+lR3dyThik77a6kRp
mPA5bB/lfFZ0pShmXZkpEc5FV96LxUFX8W6huhlfxSmPVDfNiu7ek61OyAtx
m+arQ6aKaKuz1ZFZfsiKvFTFwd7e870DgCMX/JBNRFjmslhtdZZpfn+bp2V2
yEbjyfDobMh+hEcyuWWv8PFWB6CEQdGhQ7o7QLC2OqqAtebwfHh1jJupgifR
DY/TRNCmYquTycOtDmNAlUO2Egq/qzSHeTNVPVjNvd8AYVncpfkhfu0CveHF
pMdO+DzjhcTxmjQT2EuIzH+R5reH7EyGeapShI8xS/TaQzHnMgYK3euZL+b2
ZS9M5zggTMukQCKOkkhyB8WPPTbmSQXBj0LaB7Tz65Iv4dGVCO+SNE5vpUbP
wqBfewAsZRxLPu9lPIEXL+7ovYUBaSuKQ7a/t88mANsS+Mb6C5GUImA/lTC4
4JINJIyTYaGhjgCo7W36Dqw9ZOc8+SvwER/k4hbk8ZD9uwRBVWUNSxC8pMJy
3AP+l8BoVWE65mXsPyV0+xKg8RF0Dwx+GczqLfWsFxxf9mTq9jnrsZd3POfF
XbXPmYhAKtkE/vPeabZymC9zNlmpQswVGy8Kdooy7jFZD/EgmOpFenNa98Vc
D2iS+IwnK6AmMQ5Qze/bqfkSKAeynQufnic8T2DuPX9AbgDTozuR+GjKGPXL
PiUEiQvsLJ3KWPhYHZ0dHXkohTBnrue/CHHKnGY0cXp0wP6zBLkq5yIBQVUF
m9CbQP9okZv9vb29J498fIW00rNBVN702GS+UnG6qHB7w2ORr/znhN3w9M1o
0h2fXk983OpPszsyHNvfPGWPnz9hB0+/Y3sH+/vbvs4uePJCxAupennp4zu+
YC/T9+zZvo/RwePH3+15GJ2lKkyXbOcvIhZJepvzaLeG3WWpFOgHOxaRALkB
BqMNStJ8Dj8WgizZ5fERwPTcfn+2//Sx/f704Pl39vuTpweP7Pfnj57u0fdR
d9BrseW/5l0eAw76rx2YGc1xg0P0D91sBk+SWYqSYH6TnYdHDTCfPHvytALh
8VMyqGRA6KkmKC3+AoHqAZ/I5Ha7wB+gK0fx2Opc3UnFwCGhJBUsEirM5VQo
xtlcgJ2OGGwM6hCVIYo0+kYF3g3d2mY/uWi6R3Z0OexfDX++OXo9Oh38fDPp
M2EGK1YqYXcBV4S72MXBb8Jj6zjZdAVDspg7SOAZeAl2NWHWU4LRLe4A9vO0
kLMVaKJSHAAyr3tbnUuLCWGBs0Gzsli8Bwkyvnpx4AEHxBEqE6HkcbxCUGdg
KhHYGCQtS5cihwUSVc4zlCc25UWB+kFvAK1ILGQoVM9Sfi6jCPV/q/MV0i5P
ARoriFcb6ZnZuGOdsG+NYL5DSImSRcoSCBIKCbGCiwNYX6kUkCAgdyb9XSBJ
DgqNEkjoWHobkuJPF7CAfctXWYEald3JkGFYA7IociCKnayQG4rdgQkG8scQ
AhUASyxnAsIhwaYCxgkmC4BNAJsAyKkAbs5yoe5EFMAcQBIopfChyHONCFds
20rFds8wB7BUGkASKi1TvkjhTJrFBEiDqCFnUK1wQ8r/CEbXSR/CAkyOmQI2
gERYYiLlPKKhv7YbRj32GhgO3AnYPFWFEWAl/AkYDiDSpELwEJHTZOkxUsK5
4Akixgs9xrIOCJOJvIBwY5NiQNCaoT6DqIEqsyQtmKEE+kUQds6KVSZDYBdh
SUgfwwriPUfhD2jVK4j6ZsDeCZjPsEgB5J2ryW4lTJETlEQsq83nEHyCDiwM
nddXaVkghal2gR7rg8BVKJCiwf9YyIHRyI3adlEKdEAMUZCQ03prDvQFq26Z
VmgoQGR0PJ8ju3BBtgSBQCYAwcECw5pTQUuhEBpx4YwiXZ5HRoxCO5AULM2b
MIXVQh6qMZgI+AJWi4MdiAVJkOGgtmPCp8JxmePuAQNmo01nqNabOIM6ymNI
BQBiiJbUHUHgMX7pi3RN5HvrVp8M3Ez6Vh8Im4IOr4sx7mygx5dza3EV7BOL
puGNRBjzXIMAco1sXV8RDUMEcJCAwsYkIbm8hVgEZcEjajWLsDjlOeyhYJow
tuEWhi055HGqhGAPNGy4SOMFzBzz8B5EY4CB4Cs9iO2I8eDVLore41ewS4Gp
kiLFAmByHussjkcyZf2QbNO5HsR2wsv++bdHcVpGu9WesNATbyGjcoCBKrMM
siKwDSR6EIJANBZAQIZQfzsag6qjF0kE+QKwt30gVYJeRAJ3MCUFG0qiAPOt
HbkrkyhHW0o6lZYKOKNsuom2GDnl7Jyhf46mGNlBooGGiyQBIlxifkwEhZgT
IiZcagprgF4hg3Gx8bVxeSR+yapyTEqCHQERCrWdBJCqqS540PoGFr+MCSsU
mtuEZsF28Dwt8xCN4wJGOxvlXCLAA8BCegPOL73atb4VRF0Cr8tCIsM2+OXC
Jm2rYHMws9Gf1IITmo6RQaHWNwpQ5pSA/ABGTlcF2mxrGTmkN+SkSxIKfETO
wl+Eop/MRKcIl5Zjg2uPXfqwIz/cYHScv5bSOE7YE9VQmxryhC6iabokHqsU
aS483or3hTBRgHPhlaP3gxpynSUqv6fDm2ML32sRYMGmQA5kAqUcjRBqPmrN
vXLWQRdZNJUiMZOJiHTpxjNrYFLRVCd2b7MfpDaF4JFl+g7J/C4OMHsHLE3Q
BdVjsJ2T4W41AiPMJBTeA9QI8grGAl6tMvda20jrOV1MNrZkwoRSvIe4bDza
JR21rDQorNGsgYMmrEc9i0JClErBjjKggYVmZ1kxbXw82f1CdMYjglk7URvL
kEFZFz9YAu0wDEC5VnPQBCNyODYTKDImgrH+3YmyiYs8ZGsuBON4EIhpLCr4
Uk21htv4ih2lyQKFFdXmWmnZIbgHRnZo2FegbsQHfKLYKSBQglOzsTrihYUz
iFHPridX24H+y84v6Pvl8D+uR5fDAX6fvO6fnrovHTNi8vri+nRQfatmHl2c
nQ3PB3oyPGW1R53ts/5P25pJ2xfjq9HFef90e03+iSo60JZoQ7NcoCZx1bFZ
HuH98mj83/+1/5j99tu/mOT399/ND8x+4QeKi96NpEr/BPKuOjzLBM/JllPA
lskCzIk2gnfpMmHosXqdztdvkTLvDtn30zDbf/yDeYAI1x5amtUeEs3Wn6xN
1kRsedSyjaNm7XmD0nV4+z/Vflu6ew+//3MMhoh195/9+YeOFrRzL3kAZZ2Y
QACtYqNQTFKVAikjdKLCxQwuZHbDtUZ5aYm2oTKR+DtFdoRxGRn9QzjPRn8Z
Dm4uhyfDn24m1+PxxeXVcIBKhoplldpWvk+GN/3rq9eVyqIxEqoA1RnZ4FVl
aULRtgZSacFrgogSA4/Bs83kbWk8E4TQ4DoJ5ATzwU8EtgmdhgHWmutIU0M3
h8hCZnELFtpGgGfWW386WUxoTUpEM2cyB6ftAULUcTYs5vW3GkwAb1Dm1nGv
Q6eBQpOUt3pDipE1pVCDGRWt4h5aZ1GZRgO6lSFVE6Imd/DZNAVDie6xFiuS
kex7bKYNXOJlF22TSuGVLDBiNnxtw8gioS2LW91g6dyL9j8QEitKjHJxW4LH
NuG+2cVk7ZsAzkWYQpz5N5P2VasGOgKCIFQXJzC+MkugC1vpcsZUgKTyCGIz
rKpSDS5e+VJduRs/LCnKHKOSdDYz9SKdfnNFET46ED4FeQxd+Hne5J4JdirF
doyubSQ1lnzBZcynmM3rHE0TSvOlkmJMYXuu3GQF0WhRxT/rTChnltacTwWE
11Ro/AM+oHIOtPaPIydVv774s9V5PbgM2OSE/TYayIC9PRpeXgXv9F/wHcE7
rHwy9nY0yOExYgaj+/IgANGT+L880CPOdzYagN3fWbf7gx626fN9t8s8UPIK
FNrz4cn2M+nn64B97PMg4JYtZAtJt3VERWLsilUfs30SzZGeaPwn2uw2ba9V
iPH4FAQLAsmuGxc0xNAYS8XI+/OY0mYQSg7pdVaQYF6Rg/EnmUwAopdcorah
42iDZgbyr22Xs4oBYg0rOy/q3BLlKi5fdeV1+G4rB2S3xqOgdS+CXyYQ3khd
1UipcrReqsOydS3hNrUXW+wTzpC4LC6mUodR/uZ87cbQAptaL/E2SU3dRzkv
nZPaclaVRNc3C4w796lNmNlSl8kzYNH+rDBpbG14YOz0+8Jj1rq4YLVFemA5
eFvhMkH6hpP0Sd9ar8owwiuT6/hMsq4Z83EkRTO/t++d/W4oRjMUACALDpsa
L26TH78qqgHssVFBmavzftUBhJVw66oeBh0rbShNusiWVDHABlBpHO7rgMHs
jIqFKt0M0kuyFVxLrjKpv8xhVfRPOL9KHxX7K1Z8tYasTFEHcrYZZaqef3b5
Km1xrSzdKClDuuXp3NUG7kDMvEywWKaWvoqIhaUx8rtuVsV97e4MQf+k1mhT
ZcVTH08UVdBW1Hy/RKEZ4OoqjmVN6fk/5zLXXEcAFAYCy13f95yDOzoZys91
gpsWz3c/0bHpzXPcPPccWasZ8Fpp/tdaAq/c3jQGjVC4Sqyqk86ayV/y2iEK
ATkGwQWdwPrQEg8qJiKEMHfFdmxBB3hYpXaqljwsRRzrTcEOw/jmBhaNdnBa
Fvfi9uiTsAFYK1RGY6rd5BjIm2Q2gYeQho/XQpPQeEnrpRTVOYwpMlwxXsoU
Q8ssoq2Oqi2ahTewBTtHYGh2P9s8G/OhqkM9k5GQB3gotW012JtkSNdeHhIh
NhCZqTqnmgDIVxxVp27tNDN9iE82NrCECNPc/MCDnlWFHEpD7qQBtvzWlnyb
LDyvKVGPfdzzfJbLqRdJP+Z0TOjb9yH/h7meOugN5zP80hDWHN5AKPtQpLpB
Xa2mmWC3ikzThIQUU2GjzdNVW6zca/DdHEUhCfiMbJg5EXQQBQ6B68nw5uqy
fz5BCbo5uxgMAzacjG+ujo9uxv3BYHT+6ub84qqSsYBdXrw+8mTuremUeYdF
Y1yu/+rV8WX/Fb3Atpl3zFYirT1BC5aQMcm5MuWicaqK7q8lT4pyzsbYtMDR
uJxgy+jOeHyidv1jiN9+M00/v/9usxc83sEDam2BUQ4s3ZGfNebJRB+trijW
N3G4tjBGialTNeRxCHJfBfI5NRMYeAGkmq5XbDR+QDaTqIYMQrjuo2FB+WcK
h6wJCMA44NFLsJ5dbwyR3oILDN7946Ik2D+H/WsZv18Bo2QYVdW21bRlsdaN
TUXIMWlDE6PSubBlKqzPgvzqGlq3VKJ+mOJM0prR2BG92549sPbTUOedK5NZ
S/2AB7AnCSvk+2WeoPcVeY6mVlU1TnfOPMNTdgHaezO+vBhfTPqnIJEXk+F5
j+mMFYIiIRfWC+iVXO3YaGCDLM1yOmowFh9Wnq+pXMxXrREq+T9aIXaKZQ+0
q9Wrd9omNuIwz1BQ6qenYJrilMwQ2tbxMPLTFUI6soWJGDOQfZYmLvDYB69t
lABr6mLODliymXdKq0vP+jzOAgZ4u3YnsBGuURHMBEjbQkamkQRhlGpe70gr
mu0fUVUXd4AaCjap1FsvbdliNCKBAlqHJ3ChUJbGMly149rKEJDa+wQtloHP
J6QuU1l7aw2dkkVpzmPWu2/W1rcb6+ME1+DRKJqYAlxVtx3NmiSXtaq87k/C
wUFTXOulnfX9H+YTlayTT6/3mCLO2ERXx+TflNUYawV/1mbw57Uo0bqZzbXK
RqcR2YGacbANkSYs2RC0Idbu0E3Hnp9x9NarPFmrqd5veXbQ8uwRzN+D0Qfs
EXvMnrDv2FP2jD3/nGdbnW8azu6b7jeN3w9/vtnqfGDnyFvLNfbh6AP44OFk
ePkGSA6/HcR2yKlIbkEbzefD3wcKd9FmNNj5t73dDxTFTvAEB39aKBoSQC0K
m6F4+HcLFNazfs08cNjOPkvDQhS7rOsUaq+HoyoY24YEVPJFcwBJNw4F8cSs
TAecX7cis3OgF1L+StjhaELwBY9LwX65ejnY/6Vq62tTDJMaU+UV8mHe26CI
D2tf69Je37FNaWoZ86bOH1919v5fcf6JFOcD+7IPQPHHQ+/PTankgc8ffxco
Pobrxz6fbUQ+bkb0yfH2wz1k2+DVRexKc1UK6axD4Modtu6E5ki3JJsYffvc
d6bYOGuWNXB+mcE6+MVlkmv7GMerocc9KuulgcXqmtKtmxHVvZStepFFwkab
5rEbNoJTJupOkVyiASA+M2DXhlWhYDUQEqaqR9lxylA7qReWasEIxfe2ZFN1
RTTPBs29EEGt8DBNF0ip12GIPZmY/tsg6sw2u/h9ivTyrbmV9M4UJfR2pUbL
9cjU+jV0RFyldFmZ4xGjRy6/RYRB1sinsVR31GgmEw0jkO9j67uSxkz3ZkL2
rQu+zSCLUgAQAdiMiG+DTKqyti1NJdfGHYpmkcL2TvvN+ZTwYgJ1fHF6evHj
9fjGS7BUpSflfKrrwToyrkbYRSNUwznVgEzIWc3hUSRNI2YrWWoheatcEMuJ
FaYIdCls0zFlRa1vdPnr6cGjShJ44u44GXkKmO3NT5fKpFUg4b+WMryPsUig
CmyPMWKwtH1bqlku0JccUNdMU7At8Lfm15oFhGUZI1xZFq8Mpl/XGuUa06vi
fy66Xrbs5ZF5RYCdTW1tu8aMjWYPdknJWkZu9qjWN8KLdVWrJu5WRmCKbTij
jemBbtDk97CAKy17oBeSrizsyJ6AFN+N8KQDhooIcv5GybCerfutc5M+BHKT
67NKwA0VqkM0L0W1dd12yurOPq+oSX1StZOdBy2MppcRPrwtx0jOIq9GVKeE
aS3GDldI3qRO19gMLKVZpB1OiHjrDfCmZjKQM7DE3dcijuc82SVGaBcYrBdb
kayAqMSrJI4T9OZjQDvdPZPvqeG6Xjw285qGqmbO/TqsVeO7dKmLvKa+PJfv
CQrjmjZWisnD0TEEPsoD1mgZ1kaAVtatw379edMFCaWtgq0WNY0XqFi9WFMr
LFOnOWxI1a8H7aBRNpJzV7RXMgbAyU51tY+QBD/CbD15W2OqqTF2axUP6yMJ
/48gbb11/7yP/eSkCJrGbddqjRs2Z0stsZPbb1ub59YhXTYpeFEq/XMb6zvY
k7jqaTCksiVde30SL9jQfWm6SqRcFOgmVkkYEHN0/JOt4yv8JyZoq4J29j5v
MIj7knL8VmdzVafxwdR2bfjmmB0Dy3rvgOEJmrU1Hk3Qd+HFJWrwNyfLpAHu
Co/tc9M0sXfdIjAdYLDw5py5l7R2QQ/rxrVLs17FUyZVCRq5VC+BmxNre9u1
uuCL/BCm1dq/MUCxR5rAjJdlUWuzaq5se67o/M1oLorcGvjBRuADxGxzs1tb
R1m99xQxxtshuuDbBh6n81bPq63pL9i8PxWgiHSqrQ8Lq/Y30L1lagwOKTl1
yLnQsVEMtj0D87LQF0+pExHbaGt14kDjvJRKWBQRkB3AlOdRjGAADSzetThi
yVe7mwrazl1ubL7XZ914muPcnyo1c7GjK5IqLJUx0RCAwjhzAOmViPVJ+1fV
xaM2c9V2OjRPF6K6zlbiBUXUhHxFRsyTaJIo78qmhloTnrwIJH5S92HwW8zk
TBuzmVErM49MsgTbamJXNwu0mIgESBMa0XW3pN3FWgTdHnrRvxjg3Zjz7vpr
5kfeXStNpH6IZf9YRLd064fshL7/z8wdtNsUkeqDq01W9g/1Y6RTCS7sZY6E
yt2V/ykP77c6/wNNTIQsdUgAAA==

-->

</rfc>
